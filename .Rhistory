library(sampling)
library(survey)
data(belgianmunicipalities)
data(belgianmunicipalities)          #we load the population from the 'survey' package
DATA    <- belgianmunicipalities
DATA    <- DATA[-2,]                 #we remove a very large municipality (IP>1)
n       <- 25                        #4.3% sample
DATA$IP <- inclusionprobabilities(DATA$Tot03,n)
IPkl    <- UPsampfordpi2(DATA$IP)    #this can take some seconds (we will use Samford sampling)
DELTA   <- IPkl - DATA$IP%*%t(DATA$IP)
#The tue variance
V <-
with(DATA,t(cbind(Men04/IP))%*%DELTA%*%(cbind(Men04/IP))
)
V
sqrt(V)
S
set.seed(354)
s       <- UPsampford(DATA$IP) #select a sampling using the Samford's method
DATA.s  <-  DATA[s==1,]
dpps_br <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps="brewer")
dpps_ov <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps="overton")
dpps_hr <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=HR(sum(DATA$IP^2)/n))
dpps_hr1<- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=HR())
dpps_ht <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=ppsmat(IPkl.s ))
## Yates-Grundy type
dpps_yg  <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=ppsmat(IPkl.s),variance="YG")
dpps_hryg<- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=HR(sum(DATA$IP^2)/n),variance="YG")
DELTA.s <- DELTA[s==1,s==1]
IPkl.s  <-  IPkl[s==1 ,s==1]
dpps_br <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps="brewer")
dpps_ov <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps="overton")
dpps_hr <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=HR(sum(DATA$IP^2)/n))
dpps_hr1<- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=HR())
dpps_ht <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=ppsmat(IPkl.s ))
dpps_yg  <- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=ppsmat(IPkl.s),variance="YG")
dpps_hryg<- svydesign(id=~1,  fpc=~IP, data=DATA.s, pps=HR(sum(DATA$IP^2)/n),variance="YG")
DELTA.tilde.s <-DELTA.s/IPkl.s
V.est <-
with(DATA.s, t(cbind(Men04/IP))%*%DELTA.tilde.s%*%(cbind(Men04/IP)))
V.est
dppswr <-svydesign(id=~1, probs=~IP, data=DATA.s)
svytotal(~Men04, dpps_ht) #should not be used for fixed size designs...
svytotal(~Men04, dpps_hr)
svytotal(~Men04, dpps_hryg)
svytotal(~Men04, dpps_hr1)
svytotal(~Men04, dpps_br)
svytotal(~Men04, dpps_ov)
svytotal(~Men04, dppswr)
ppsmat(IPkl.s )
SE(svytotal(~Men04, dpps_ht))
SE(svytotal(~Men04, dpps_ht))^2
V.est <-
with(DATA.s, t(cbind(Men04/IP))%*%DELTA.tilde.s%*%(cbind(Men04/IP)))
V.est
svytotal(~Men04, dpps_ht) #should not be used for fixed size designs...
svytotal(~Men04, dpps_htyg)
svytotal(~Men04, dpps_yg)
SE(svytotal(~Men04, dpps_yg))
SE(svytotal(~Men04, dpps_ht)) #should not be used for fixed size designs...
SE(svytotal(~Men04, dpps_yg))
SE(svytotal(~Men04, dpps_ht)) #should not be used for fixed size designs...
SE(svytotal(~Men04, dpps_yg))
SE(svytotal(~Men04, dpps_hr))
SE(svytotal(~Men04, dpps_hryg))
SE(svytotal(~Men04, dpps_hr1))
SE(svytotal(~Men04, dpps_br))
SE(svytotal(~Men04, dpps_ov))
SE(svytotal(~Men04, dppswr))
t((DATA.s$Men04/DATA.s$IP)^2)%*%DELTA.tilde.s%*%rep(1,ncol(DELTA.tilde.s))
t((DATA.s$Men04/DATA.s$IP)^2)%*%DELTA.tilde.s%*%rep(1,ncol(DELTA.tilde.s))
